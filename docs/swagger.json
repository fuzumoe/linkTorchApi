{
    "swagger": "2.0",
    "info": {
        "description": "Basic Authentication with username and password",
        "title": "URL Insight API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8090",
    "basePath": "/api/v1",
    "paths": {
        "/health": {
            "get": {
                "description": "Get the status of server and database connection",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Check service health",
                "responses": {
                    "200": {
                        "description": "Healthy service with database connection",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Service available but database connection issues",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/login/basic": {
            "post": {
                "description": "Authenticates a user using Basic Authorization header and returns a JWT token\nRequires \"Authorization: Basic base64(email:password)\" header",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login via Basic Auth header and generate JWT token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Basic base64(email:password)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT token generated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request or login error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/login/jwt": {
            "post": {
                "description": "Authenticates a user using email and password provided in JSON and returns a JWT token\nExample request: {\"email\": \"user@example.com\", \"password\": \"userpassword\"}\nExample response: {\"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login via JSON payload and generate JWT token",
                "parameters": [
                    {
                        "description": "Login request payload",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT token generated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request or login error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Authentication failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Invalidates the current JWT token so it can no longer be used",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout and invalidate JWT token",
                "responses": {
                    "200": {
                        "description": "Logout message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid token or request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Creates a new user, then generates and returns a JWT token for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user and generate JWT token",
                "parameters": [
                    {
                        "description": "Register request payload",
                        "name": "registerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered and JWT token generated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request or registration error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "Returns a welcome message and service status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Root endpoint",
                "responses": {
                    "200": {
                        "description": "Returns message, service name, and status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/urls": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "List URLs (paginated)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "example": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "example": 10,
                        "description": "page_size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.URLDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Create URL row",
                "parameters": [
                    {
                        "description": "URL to crawl",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.URLCreateRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{id}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/urls/{id}": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Get one URL row",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "URL ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.URLDTO"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Update URL row",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "URL ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "fields",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateURLInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Delete URL row",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "URL ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/urls/{id}/results": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Latest analysis snapshot + links",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "URL ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.URLResultsDTO"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/urls/{id}/start": {
            "patch": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Start crawl",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "URL ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "queued",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/urls/{id}/stop": {
            "patch": {
                "security": [
                    {
                        "JWTAuth": []
                    },
                    {
                        "BasicAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Stop crawl",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "URL ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "stopped",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handler.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.AnalysisResult": {
            "type": "object",
            "properties": {
                "broken_link_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "external_link_count": {
                    "type": "integer"
                },
                "h1_count": {
                    "type": "integer"
                },
                "h2_count": {
                    "type": "integer"
                },
                "h3_count": {
                    "type": "integer"
                },
                "h4_count": {
                    "type": "integer"
                },
                "h5_count": {
                    "type": "integer"
                },
                "h6_count": {
                    "type": "integer"
                },
                "has_login_form": {
                    "type": "boolean"
                },
                "html_version": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "internal_link_count": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url_id": {
                    "type": "integer"
                }
            }
        },
        "model.Link": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_external": {
                    "type": "boolean"
                },
                "status_code": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "url_id": {
                    "type": "integer"
                }
            }
        },
        "model.URLCreateRequestDTO": {
            "type": "object",
            "required": [
                "original_url"
            ],
            "properties": {
                "original_url": {
                    "type": "string",
                    "example": "https://example.com"
                }
            }
        },
        "model.URLDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "original_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "queued",
                        "running",
                        "done",
                        "error"
                    ]
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.URLResultsDTO": {
            "type": "object",
            "properties": {
                "analysis_results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AnalysisResult"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Link"
                    }
                },
                "url": {
                    "$ref": "#/definitions/model.URLDTO"
                }
            }
        },
        "model.UpdateURLInput": {
            "type": "object",
            "properties": {
                "original_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "queued",
                        "running",
                        "done",
                        "error"
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        },
        "JWTAuth": {
            "description": "JWT Authentication token, prefixed with \"Bearer \" followed by the token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}
